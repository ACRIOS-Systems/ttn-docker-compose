version: "3.4"
services:

  postgres:
    # In production, replace 'latest' with tag from https://hub.docker.com/_/postgres?tab=tags
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=ttn_lorawan
    volumes:
      - ./data/ttn/postgres:/var/lib/postgresql/data
    #ports:
    #  - "127.0.0.1:5432:5432"
    networks:
      - "local"


  redis:
    # In production, replace 'latest' with tag from https://hub.docker.com/_/redis?tab=tags
    image: redis:latest
    command: redis-server --appendonly yes
    restart: unless-stopped
    volumes:
      - ./data/ttn/redis:/data
    #ports:
    #  - "127.0.0.1:6379:6379"
    networks:
      - "local"


  stack:
    # In production, replace 'latest' with tag from https://hub.docker.com/r/thethingsnetwork/lorawan-stack/tags
    image: thethingsnetwork/lorawan-stack:latest
    entrypoint: ttn-lw-stack -c /config/ttn-lw-stack-docker.yml
    command: start
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
    volumes:
      - ./blob:/srv/ttn-lorawan/public/blob
      - ./config/stack:/config:ro
      # If using Let's Encrypt:
      #- ./acme:/var/lib/acme
    environment:
      TTN_LW_BLOB_LOCAL_DIRECTORY: /srv/ttn-lorawan/public/blob
      TTN_LW_REDIS_ADDRESS: redis:6379
      TTN_LW_IS_DATABASE_URI: postgres://root:root@postgres:5432/ttn_lorawan?sslmode=disable

    ports:
      - 1700:1700/udp



    healthcheck:
      test: curl --fail http://localhost:8089 || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

    expose:
      - 8089

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.ttn.rule=Host(`ttn.testvps.acrios.com`)"
      - "traefik.http.routers.ttn.EntryPoints=web"
      - "traefik.http.routers.ttn.middlewares=redir-https@file"
      - "traefik.http.routers.ttn-https.EntryPoints=websecure"
      - "traefik.http.routers.ttn-https.rule=Host(`ttn.testvps.acrios.com`)"
      - "traefik.http.routers.ttn-https.tls.certresolver=letsencrypt"
      - "traefik.http.routers.ttn-https.tls=true"
      - "traefik.http.services.ttn-https.loadbalancer.server.port=8089"
    networks:
      - "local"
      - "proxy"

networks:
  local:
    external: False
    ipam:
      config:
        - subnet: 172.123.255.0/24

  proxy:
    external: True


